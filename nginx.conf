# Nginx Configuration for SSPL Application
# Supports development, preview, and production environments

events {
    worker_connections 1024;
}

http {

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;

    # Upstream backend
    upstream sspl_backend {
        server 127.0.0.1:3001;
        keepalive 32;
    }

# HTTP to HTTPS redirect
# server {
#     listen 80;
#     server_name ssplt10.cloud www.ssplt10.cloud preview.ssplt10.cloud;
#     return 301 https://$server_name$request_uri;
# }

# Production server
server {
    listen 80;
    server_name www.ssplt10.cloud ssplt10.cloud;

    # SSL Configuration (replace with your certificate paths)
    # ssl_certificate /path/to/your/certificate.crt;
    # ssl_certificate_key /path/to/your/private.key;
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers HIGH:!aNULL:!MD5;

    # Security Headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Root directory
    root d:\GitRepo\SSPL_Clone\httpdocs;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Static assets with caching
    location /assets/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        etag on;
        try_files $uri =404;
    }

    # HTML files - never cache
    location ~* \.html$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
        add_header Pragma "no-cache";
        add_header Expires "0";
        etag on;
        try_files $uri =404;
    }

    # Images with optimized caching
    location ~* \.(png|jpg|jpeg|gif|ico|svg|webp|avif)$ {
        expires 6M;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff";
        etag on;
        try_files $uri =404;
    }

    # Fonts with long-term caching
    location ~* \.(woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        etag on;
        try_files $uri =404;
    }

    # CSS and JS with versioning
    location ~* \.(css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        etag on;
        try_files $uri =404;
    }

    # API proxy to backend
    location /api/ {
        limit_req zone=api burst=20 nodelay;

        proxy_pass http://sspl_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health check endpoint
    location /health {
        limit_req zone=general burst=5 nodelay;

        proxy_pass http://sspl_backend/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # SPA routing - serve index.html for all non-API routes
    location / {
        limit_req zone=general burst=10 nodelay;

        try_files $uri $uri/ /index.html;
    }

    # Security: Don't serve dotfiles
    location ~ /\. {
        deny all;
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;

    location = /50x.html {
        root d:\GitRepo\SSPL_Clone\httpdocs;
    }

    # Logs
    # access_log /var/log/nginx/ssplt10_access.log;
    # error_log /var/log/nginx/ssplt10_error.log;
}

# Preview server
server {
    listen 80;
    server_name preview.ssplt10.cloud;

    # SSL Configuration (use same cert or separate preview cert)
    # ssl_certificate /path/to/your/preview_certificate.crt;
    # ssl_certificate_key /path/to/your/preview_private.key;
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers HIGH:!aNULL:!MD5;

    # Security Headers (same as production)
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Root directory (same as production for now, can be separated later)
    root d:\GitRepo\SSPL_Clone\httpdocs;
    index index.html;

    # Advanced gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        application/atom+xml
        image/svg+xml
        font/woff
        font/woff2;
    gzip_comp_level 6;
    gzip_disable "msie6";

    # Brotli compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types
    #     text/plain
    #     text/css
    #     text/xml
    #     text/javascript
    #     application/javascript
    #     application/json
    #     application/xml
    #     application/atom+xml
    #     image/svg+xml
    #     font/woff
    #     font/woff2;

    # Static assets with aggressive caching
    location /assets/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff";
        add_header X-Frame-Options "DENY";
        add_header X-XSS-Protection "1; mode=block";
        etag on;

        # Enable gzip compression for assets
        gzip_static on;

        # CORS for CDN
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";

        try_files $uri =404;
    }

    # HTML files - never cache
    location ~* \.html$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
        add_header Pragma "no-cache";
        add_header Expires "0";
        etag on;
        try_files $uri =404;
    }

    # Images with optimized caching
    location ~* \.(png|jpg|jpeg|gif|ico|svg|webp|avif)$ {
        expires 6M;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff";
        etag on;

        # Enable gzip for SVG
        gzip on;
        gzip_types image/svg+xml;

        # CORS for images
        add_header Access-Control-Allow-Origin "*";

        try_files $uri =404;
    }

    # Fonts with long-term caching
    location ~* \.(woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
        add_header X-Content-Type-Options "nosniff";
        etag on;

        try_files $uri =404;
    }

    # CSS and JS with versioning
    location ~* \.(css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff";
        etag on;

        # Enable gzip
        gzip on;
        gzip_types text/css application/javascript;

        try_files $uri =404;
    }

    # API proxy to backend (same backend, different environment)
    location /api/ {
        limit_req zone=api burst=20 nodelay;

        proxy_pass http://sspl_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health check endpoint
    location /health {
        limit_req zone=general burst=5 nodelay;

        proxy_pass http://sspl_backend/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # SPA routing
    location / {
        limit_req zone=general burst=10 nodelay;

        try_files $uri $uri/ /index.html;
    }

    # Security
    location ~ /\. {
        deny all;
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;

    location = /50x.html {
        root d:\GitRepo\SSPL_Clone\httpdocs;
    }

    # Logs
    # access_log /var/log/nginx/ssplt10_preview_access.log;
    # error_log /var/log/nginx/ssplt10_preview_error.log;
}

}