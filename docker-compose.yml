version: '3.8'

services:
  # Multiple frontend instances for load balancing
  frontend1:
    build:
      context: ./httpdocs
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    depends_on:
      - backend1
      - backend2
      - backend3
    networks:
      - sspl-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  frontend2:
    build:
      context: ./httpdocs
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    depends_on:
      - backend1
      - backend2
      - backend3
    networks:
      - sspl-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  frontend3:
    build:
      context: ./httpdocs
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    depends_on:
      - backend1
      - backend2
      - backend3
    networks:
      - sspl-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  # Multiple backend instances for load balancing
  backend1:
    build:
      context: ./httpdocs
      dockerfile: Dockerfile.backend
    environment:
      - NODE_ENV=production
      - PORT=3001
    volumes:
      - ./httpdocs/.env:/app/.env:ro
    networks:
      - sspl-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  backend2:
    build:
      context: ./httpdocs
      dockerfile: Dockerfile.backend
    environment:
      - NODE_ENV=production
      - PORT=3001
    volumes:
      - ./httpdocs/.env:/app/.env:ro
    networks:
      - sspl-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  backend3:
    build:
      context: ./httpdocs
      dockerfile: Dockerfile.backend
    environment:
      - NODE_ENV=production
      - PORT=3001
    volumes:
      - ./httpdocs/.env:/app/.env:ro
    networks:
      - sspl-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Nginx load balancer
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend1
      - frontend2
      - frontend3
      - backend1
      - backend2
      - backend3
    networks:
      - sspl-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M

volumes:
  nginx_logs:

networks:
  sspl-network:
    driver: bridge